# GitHub Workflows file

name: main

defaults:
  run:
    shell: bash --noprofile --norc -euo pipefail {0}

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: "Version `x.y.z` (without leading `v`)"
        type: string
        required: true

jobs:
  bazel_build:
    name: Bazel test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        build:
          # - macos
          - linux
          - windows
        include:
          # - build: macos
          #   os: macos-latest
          - build: linux
            os: ubuntu-latest
          - build: windows
            os: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Setup Windows Bazelrc
        # https://bazel.build/configure/windows
        run: |
          echo "startup --output_user_root=C:/tmp" > ${{ github.workspace }}/user.bazelrc
        shell: cmd
        if: runner.os == 'Windows'
      - name: Run tests
        run: bazel build --config=ci -- //...

  mkrelease:
    name: Create Release
    runs-on: ubuntu-latest
    needs: bazel_build
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Create Release
        run: |
          gh release create v${VERSION} --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ github.event.inputs.version }}

  # The success job is here to consolidate the total success/failure state of
  # all other jobs. This job is then included in the GitHub branch protection
  # rule which prevents merges unless all other jobs are passing. This makes
  # it easier to manage the list of jobs via this yml file and to prevent
  # accidentally adding new jobs without also updating the branch protections.
  success:
    name: Success gate
    if: always()
    needs:
      - bazel_build
    runs-on: ubuntu-latest
    steps:
      - run: jq --exit-status 'all(.result == "success")' <<< '${{ toJson(needs) }}'
      - name: Done
        run: exit 0
